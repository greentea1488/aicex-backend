import { Context } from "grammy";
import { 
  freepikMainMenu, 
  freepikTextToImageMenu,
  freepikStyledImageMenu,
  freepikVideoModelsMenu,
  freepikVideoKlingNewMenu,
  freepikVideoKlingClassicMenu,
  freepikVideoPixVerseMenu,
  freepikVideoMinimaxMenu,
  freepikVideoSeedanceMenu,
  freepikVideoWanMenu,
  freepikEditMenu,
  freepikFiltersMenu,
  freepikQualityMenu,
  freepikAspectRatioMenu,
  freepikGenerationSettingsMenu,
  freepikPersonGenerationMenu,
  freepikSafetySettingsMenu,
  freepikVideoDurationMenu,
  freepikVideoParamsMenu,
  freepikTaskStatusMenu
} from "../keyboards/freepikKeyboard";
import { startMenu } from "../keyboards/startKeyboard";
import { FreepikLoraService } from "../services/ai/FreepikLoraService";
import { SessionManager } from "../services/SessionManager";
import { prisma } from "../../utils/prismaClient";
import { safeEditMessage } from "../utils/UXHelpers";

export class FreepikHandler {
  private sessionManager = new SessionManager();
  private freepikService = new FreepikLoraService();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  private userStates = new Map<string, any>();

  async showMainMenu(ctx: Context) {
    await safeEditMessage(ctx, 
      "üé® Freepik + Lora AI Platform\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:",
      { reply_markup: freepikMainMenu }
    );
  }

  async showTextToImageMenu(ctx: Context) {
    const userId = ctx.from?.id.toString();
    if (userId) {
      this.setUserState(userId, { action: 'text_to_image' });
    }

    await safeEditMessage(ctx, 
      "üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ —Ç–µ–∫—Å—Ç–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:",
      { reply_markup: freepikTextToImageMenu }
    );
  }

  async showStyledImageMenu(ctx: Context) {
    const userId = ctx.from?.id.toString();
    if (userId) {
      this.setUserState(userId, { action: 'styled_images' });
    }

    await safeEditMessage(ctx, 
      "üé≠ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —Å—Ç–∏–ª—è–º–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å:",
      { reply_markup: freepikStyledImageMenu }
    );
  }

  async showImageToVideoMenu(ctx: Context) {
    const userId = ctx.from?.id.toString();
    if (userId) {
      this.setUserState(userId, { action: 'image_to_video' });
    }

    await safeEditMessage(ctx, 
      "üé¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –º–æ–¥–µ–ª–µ–π:",
      { reply_markup: freepikVideoModelsMenu }
    );
  }

  async showEditMenu(ctx: Context) {
    const userId = ctx.from?.id.toString();
    if (userId) {
      this.setUserState(userId, { action: 'editing' });
    }

    await safeEditMessage(ctx, 
      "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
      { reply_markup: freepikEditMenu }
    );
  }

  async showFiltersMenu(ctx: Context) {
    const userId = ctx.from?.id.toString();
    if (userId) {
      this.setUserState(userId, { action: 'filters' });
    }

    await safeEditMessage(ctx, 
      "üé® AI –§–∏–ª—å—Ç—Ä—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞:",
      { reply_markup: freepikFiltersMenu }
    );
  }

  async selectImageModel(ctx: Context, model: string) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    // –ú–∞–ø–∏–Ω–≥ –º–æ–¥–µ–ª–µ–π
    const modelMap: { [key: string]: { name: string, api_model: string } } = {
      'mystic': { name: 'Mystic (–†–µ–∞–ª–∏–∑–º)', api_model: 'realism' },
      'artistic': { name: 'Artistic (–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π)', api_model: 'artistic' },
      'fantasy': { name: 'Fantasy (–§—ç–Ω—Ç–µ–∑–∏)', api_model: 'fantasy' },
      'photography': { name: 'Photography (–§–æ—Ç–æ)', api_model: 'photography' },
      'portrait': { name: 'Portrait (–ü–æ—Ä—Ç—Ä–µ—Ç)', api_model: 'portrait' },
      'landscape': { name: 'Landscape (–ü–µ–π–∑–∞–∂)', api_model: 'landscape' },
      'architecture': { name: 'Architecture (–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)', api_model: 'architecture' }
    };

    const selectedModel = modelMap[model];
    if (!selectedModel) return;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
    this.setUserState(userId, { 
      action: 'image_generation',
      model: selectedModel.api_model,
      model_name: selectedModel.name
    });

    await safeEditMessage(ctx, 
      `üé® –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: ${selectedModel.name}\n\n` +
      "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å.\n\n" +
      "üìù –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤:\n" +
      "‚Ä¢ '–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º'\n" +
      "‚Ä¢ '–ü–æ—Ä—Ç—Ä–µ—Ç –¥–µ–≤—É—à–∫–∏ –≤ —Å—Ç–∏–ª–µ —Ä–µ–Ω–µ—Å—Å–∞–Ω—Å'\n" +
      "‚Ä¢ '–§–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥ –±—É–¥—É—â–µ–≥–æ'\n" +
      "‚Ä¢ '–ö–æ—Ç–µ–Ω–æ–∫ –∏–≥—Ä–∞–µ—Ç –≤ —Å–∞–¥—É'\n\n" +
      "üí° –ü–∏—à–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!",
      { reply_markup: new (await import("grammy")).InlineKeyboard().text("üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å", "freepik_image_gen") }
    );

    // –ù–∞—á–∏–Ω–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞
    this.sessionManager.createSession(userId, 'freepik_image');
  }

  async selectVideoModel(ctx: Context, modelKey: string) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    // –ü–æ–ª–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤—Å–µ—Ö 23 –≤–∏–¥–µ–æ –º–æ–¥–µ–ª–µ–π Freepik API
    const modelMap: { [key: string]: { name: string, api_model: string, description: string } } = {
      // üöÄ Kling –Ω–æ–≤—ã–µ –º–æ–¥–µ–ª–∏
      'kling-v2.5-pro': { 
        name: 'Kling v2.5 Pro', 
        api_model: 'kling-v2.5-pro', 
        description: '–ù–æ–≤–µ–π—à–∞—è –º–æ–¥–µ–ª—å —Å –ª—É—á—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º' 
      },
      'kling-v2.1-master': { 
        name: 'Kling v2.1 Master', 
        api_model: 'kling-v2.1-master', 
        description: '–ú–∞—Å—Ç–µ—Ä-–≤–µ—Ä—Å–∏—è —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏' 
      },
      'kling-pro-v2.1': { 
        name: 'Kling Pro v2.1', 
        api_model: 'kling-pro-v2.1', 
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è 2.1' 
      },
      'kling-std-v2.1': { 
        name: 'Kling Std v2.1', 
        api_model: 'kling-std-v2.1', 
        description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è 2.1' 
      },
      'kling-v2': { 
        name: 'Kling v2', 
        api_model: 'kling-v2', 
        description: '–ë–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è 2.0' 
      },

      // ‚≠ê Kling –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏
      'kling-pro-1.6': { 
        name: 'Kling Pro 1.6', 
        api_model: 'kling-pro-1.6', 
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è 1.6' 
      },
      'kling-std-1.6': { 
        name: 'Kling Std 1.6', 
        api_model: 'kling-std-1.6', 
        description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è 1.6' 
      },
      'kling-elements-pro-1.6': { 
        name: 'Kling Elements Pro 1.6', 
        api_model: 'kling-elements-pro-1.6', 
        description: '–≠–ª–µ–º–µ–Ω—Ç—ã Pro 1.6' 
      },
      'kling-elements-std-1.6': { 
        name: 'Kling Elements Std 1.6', 
        api_model: 'kling-elements-std-1.6', 
        description: '–≠–ª–µ–º–µ–Ω—Ç—ã Std 1.6' 
      },

      // üéØ PixVerse –º–æ–¥–µ–ª–∏
      'pixverse-v5': { 
        name: 'PixVerse V5', 
        api_model: 'pixverse-v5', 
        description: '–ù–æ–≤–µ–π—à–∞—è –≤–µ—Ä—Å–∏—è PixVerse' 
      },
      'pixverse-v5-transition': { 
        name: 'PixVerse V5 Transition', 
        api_model: 'pixverse-v5-transition', 
        description: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö' 
      },

      // üé™ Minimax Hailuo –º–æ–¥–µ–ª–∏
      'minimax-hailuo-02-1080p': { 
        name: 'Minimax Hailuo 02 1080p', 
        api_model: 'minimax-hailuo-02-1080p', 
        description: '–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ 1080p' 
      },
      'minimax-hailuo-02-768p': { 
        name: 'Minimax Hailuo 02 768p', 
        api_model: 'minimax-hailuo-02-768p', 
        description: '–°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ 768p' 
      },

      // üé≠ Seedance –º–æ–¥–µ–ª–∏
      'seedance-pro-1080p': { 
        name: 'Seedance Pro 1080p', 
        api_model: 'seedance-pro-1080p', 
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è 1080p' 
      },
      'seedance-pro-720p': { 
        name: 'Seedance Pro 720p', 
        api_model: 'seedance-pro-720p', 
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è 720p' 
      },
      'seedance-pro-480p': { 
        name: 'Seedance Pro 480p', 
        api_model: 'seedance-pro-480p', 
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è 480p' 
      },
      'seedance-lite-1080p': { 
        name: 'Seedance Lite 1080p', 
        api_model: 'seedance-lite-1080p', 
        description: 'Lite –≤–µ—Ä—Å–∏—è 1080p' 
      },
      'seedance-lite-720p': { 
        name: 'Seedance Lite 720p', 
        api_model: 'seedance-lite-720p', 
        description: 'Lite –≤–µ—Ä—Å–∏—è 720p' 
      },
      'seedance-lite-480p': { 
        name: 'Seedance Lite 480p', 
        api_model: 'seedance-lite-480p', 
        description: 'Lite –≤–µ—Ä—Å–∏—è 480p' 
      },

      // üåü Wan –º–æ–¥–µ–ª–∏
      'wan-v2.2-720p': { 
        name: 'Wan v2.2 720p', 
        api_model: 'wan-v2.2-720p', 
        description: 'Wan –≤–µ—Ä—Å–∏—è 720p' 
      },
      'wan-v2.2-580p': { 
        name: 'Wan v2.2 580p', 
        api_model: 'wan-v2.2-580p', 
        description: 'Wan –≤–µ—Ä—Å–∏—è 580p' 
      },
      'wan-v2.2-480p': { 
        name: 'Wan v2.2 480p', 
        api_model: 'wan-v2.2-480p', 
        description: 'Wan –≤–µ—Ä—Å–∏—è 480p' 
      }
    };

    const selectedModel = modelMap[modelKey];
    if (!selectedModel) {
      await ctx.answerCallbackQuery("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å");
      return;
    }

    this.setUserState(userId, { 
      action: 'video_generation',
      model: selectedModel.api_model,
      model_name: selectedModel.name
    });

    await safeEditMessage(ctx, 
      `üé¨ –í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: ${selectedModel.name}\n\n` +
      `üìù ${selectedModel.description}\n\n` +
      "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å.\n\n" +
      "üí° –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –≤–∏–¥–µ–æ:\n" +
      "‚Ä¢ '–í–æ–ª–Ω—ã —Ä–∞–∑–±–∏–≤–∞—é—Ç—Å—è –æ —Å–∫–∞–ª—ã –Ω–∞ –∑–∞–∫–∞—Ç–µ'\n" +
      "‚Ä¢ '–ß–µ–ª–æ–≤–µ–∫ –º–µ–¥–ª–µ–Ω–Ω–æ –∏–¥–µ—Ç –ø–æ –ª–µ—Å–Ω–æ–π —Ç—Ä–æ–ø–∏–Ω–∫–µ'\n" +
      "‚Ä¢ '–î—ã–º –ø–ª–∞–≤–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –æ—Ç –∫–æ—Å—Ç—Ä–∞'\n" +
      "‚Ä¢ '–¶–≤–µ—Ç—ã –∫–∞—á–∞—é—Ç—Å—è –Ω–∞ –≤–µ—Ç—Ä—É –≤ –ø–æ–ª–µ'\n" +
      "‚Ä¢ '–ö–æ—Ç –∏–≥—Ä–∞–µ—Ç —Å –∫–ª—É–±–∫–æ–º —à–µ—Ä—Å—Ç–∏'\n\n" +
      "‚è±Ô∏è –í–∏–¥–µ–æ –±—É–¥–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é ~5 —Å–µ–∫—É–Ω–¥\n" +
      "üéØ –ö–∞—á–µ—Å—Ç–≤–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏",
      { reply_markup: new (await import("grammy")).InlineKeyboard().text("üîô –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å", "freepik_video_gen") }
    );

    this.sessionManager.createSession(userId, 'freepik_video');
  }

  async processUserPrompt(ctx: Context, prompt: string) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    const userState = this.getUserState(userId);
    if (!userState || !userState.action) {
      await ctx.reply("‚ùå –û—à–∏–±–∫–∞: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start");
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    await ctx.replyWithChatAction("typing");

    try {
      if (userState.action === 'image_generation') {
        await this.generateImage(ctx, prompt, userState);
      } else if (userState.action === 'video_generation') {
        await this.generateVideo(ctx, prompt, userState);
      } else {
        await ctx.reply("‚ùå –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.");
      }
    } catch (error) {
      console.error("Error processing Freepik prompt:", error);
      await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }

    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    this.clearUserState(userId);
    this.sessionManager.endSession(userId);
  }

  private async generateImage(ctx: Context, prompt: string, userState: any) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const processingMessage = await ctx.reply(
      `üé® ${userState.model_name}\n\n` +
      `üìù –ü—Ä–æ–º–ø—Ç: ${prompt}\n\n` +
      `‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...\n` +
      `üîÑ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 30-90 —Å–µ–∫—É–Ω–¥\n` +
      `‚è∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...`
    );

    try {
      const response = await this.freepikService.chat([
        { role: 'user', content: prompt }
      ], ctx.from?.id.toString() || '');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç–µ
      const base64Match = response.content.match(/data:image\/[^;]+;base64,([^"]+)/);
      
      if (base64Match) {
        // –ï—Å—Ç—å base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        const base64Data = base64Match[1];
        const imageBuffer = Buffer.from(base64Data, 'base64');
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        await ctx.api.deleteMessage(ctx.chat?.id || 0, processingMessage.message_id);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await ctx.replyWithPhoto(
          new (await import("grammy/types")).InputFile(imageBuffer, "freepik_image.jpg"),
          {
            caption: 
              `üé® ${userState.model_name}\n` +
              `üìù ${prompt}\n\n` +
              `‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!`,
            reply_markup: new (await import("grammy")).InlineKeyboard()
              .text("üîÑ –°–æ–∑–¥–∞—Ç—å –µ—â–µ", "freepik_image_gen")
              .row()
              .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
          }
        );
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ Task ID –≤ –æ—Ç–≤–µ—Ç–µ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è)
        const taskIdMatch = response.content.match(/Task ID: ([a-f0-9-]+)/);
        
        if (taskIdMatch) {
          // –ó–∞–¥–∞—á–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
          await ctx.api.editMessageText(
            ctx.chat?.id || 0,
            processingMessage.message_id,
            `üé® ${userState.model_name}\n\n` +
            `${response.content}\n\n` +
            `üéâ **–û—Ç–ª–∏—á–Ω–æ!** Freepik API —Ä–∞–±–æ—Ç–∞–µ—Ç!\n` +
            `üé® –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å\n` +
            `‚ö° –ú–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—â–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ\n\n` +
            `üî• **–°–æ–∑–¥–∞–π—Ç–µ –µ—â–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:**`,
            { 
              reply_markup: new (await import("grammy")).InlineKeyboard()
                .text("üîÑ –ï—â–µ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "freepik_image_gen")
                .row()
                .text("üé≠ –î—Ä—É–≥–∞—è –º–æ–¥–µ–ª—å", "freepik_image_gen") 
                .text("üé® –î—Ä—É–≥–æ–π —Å—Ç–∏–ª—å", "freepik_image_gen")
                .row()
                .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
            }
          );
        } else {
          // –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
          await ctx.api.editMessageText(
            ctx.chat?.id || 0,
            processingMessage.message_id,
            `üé® ${userState.model_name}\n\n${response.content}`,
            { 
              reply_markup: new (await import("grammy")).InlineKeyboard()
                .text("üîÑ –°–æ–∑–¥–∞—Ç—å –µ—â–µ", "freepik_image_gen")
                .row()
                .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
            }
          );
        }
      }
    } catch (error) {
      console.error("Error generating image:", error);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      await ctx.api.editMessageText(
        ctx.chat?.id || 0,
        processingMessage.message_id,
        `‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n\n` +
        `üìù –ü—Ä–æ–º–ø—Ç: ${prompt}\n` +
        `üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–º–ø—Ç`,
        { 
          reply_markup: new (await import("grammy")).InlineKeyboard()
            .text("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", "freepik_image_gen")
            .row()
            .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
        }
      );
    }
  }

  private async generateVideo(ctx: Context, prompt: string, userState: any) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≤–∏–¥–µ–æ
    const processingMessage = await ctx.reply(
      `üé¨ ${userState.model_name}\n\n` +
      `üìù –ü—Ä–æ–º–ø—Ç: ${prompt}\n\n` +
      `‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –≤–∏–¥–µ–æ...\n` +
      `üîÑ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 60-120 —Å–µ–∫—É–Ω–¥\n` +
      `‚è∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...`
    );

    try {
      // –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ generateVideo –∏–∑ FreepikLoraService
      const response = await this.freepikService.generateVideo(
        prompt, 
        ctx.from?.id.toString() || '',
        userState.model || 'cinematic'
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–∏–¥–µ–æ –≤ –æ—Ç–≤–µ—Ç–µ
      const videoMatch = response.content.match(/\[–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ\]\(([^)]+)\)/);
      
      if (videoMatch) {
        // –ï—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—ë
        const videoUrl = videoMatch[1];
        
        await ctx.api.deleteMessage(ctx.chat?.id || 0, processingMessage.message_id);
        
        await ctx.reply(
          `üé¨ ${userState.model_name}\n` +
          `üìù ${prompt}\n\n` +
          `‚úÖ –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!\n` +
          `üé• [–û—Ç–∫—Ä—ã—Ç—å –≤–∏–¥–µ–æ](${videoUrl})`,
          {
            parse_mode: "Markdown",
            reply_markup: new (await import("grammy")).InlineKeyboard()
              .text("üîÑ –°–æ–∑–¥–∞—Ç—å –µ—â–µ", "freepik_video_gen")
              .row()
              .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
          }
        );
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Task ID –¥–ª—è webhook –æ—Ç–≤–µ—Ç–∞
        const taskIdMatch = response.content.match(/Task ID: ([a-f0-9-]+)/);
        
        if (taskIdMatch) {
          await ctx.api.editMessageText(
            ctx.chat?.id || 0,
            processingMessage.message_id,
            `üé¨ ${userState.model_name}\n\n` +
            `${response.content}\n\n` +
            `üéâ **–û—Ç–ª–∏—á–Ω–æ!** Freepik Video API —Ä–∞–±–æ—Ç–∞–µ—Ç!\n` +
            `üé¨ –í–∞—à–µ –≤–∏–¥–µ–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å\n` +
            `‚ö° –ú–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –µ—â–µ –≤–∏–¥–µ–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ\n\n` +
            `üî• **–°–æ–∑–¥–∞–π—Ç–µ –µ—â–µ –≤–∏–¥–µ–æ:**`,
            { 
              reply_markup: new (await import("grammy")).InlineKeyboard()
                .text("üîÑ –ï—â–µ –æ–¥–Ω–æ –≤–∏–¥–µ–æ", "freepik_video_gen")
                .row()
                .text("üé≠ –î—Ä—É–≥–∞—è –º–æ–¥–µ–ª—å", "freepik_video_gen") 
                .text("üé® –î—Ä—É–≥–æ–π —Å—Ç–∏–ª—å", "freepik_video_gen")
                .row()
                .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
            }
          );
        } else {
          // –û–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–∏—Å–∞
          await ctx.api.editMessageText(
            ctx.chat?.id || 0,
            processingMessage.message_id,
            `üé¨ ${userState.model_name}\n\n${response.content}`,
            { 
              reply_markup: new (await import("grammy")).InlineKeyboard()
                .text("üîÑ –°–æ–∑–¥–∞—Ç—å –µ—â–µ", "freepik_video_gen")
                .row()
                .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
            }
          );
        }
      }
    } catch (error) {
      console.error("Error generating video:", error);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      await ctx.api.editMessageText(
        ctx.chat?.id || 0,
        processingMessage.message_id,
        `‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ\n\n` +
        `üìù –ü—Ä–æ–º–ø—Ç: ${prompt}\n` +
        `üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–º–ø—Ç`,
        { 
          reply_markup: new (await import("grammy")).InlineKeyboard()
            .text("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", "freepik_video_gen")
            .row()
            .text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "start")
        }
      );
    }
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  private setUserState(userId: string, state: any) {
    this.userStates.set(userId, { ...this.getUserState(userId), ...state });
  }

  private getUserState(userId: string) {
    return this.userStates.get(userId) || {};
  }

  private clearUserState(userId: string) {
    this.userStates.delete(userId);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ Freepik
  hasActiveFreepikSession(userId: string): boolean {
    const session = this.sessionManager.getSession(userId);
    return session?.aiProvider?.startsWith('freepik_') || false;
  }

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ Freepik
  endFreepikSession(userId: string) {
    this.sessionManager.endSession(userId);
    this.clearUserState(userId);
  }

  // üîß –ù–û–í–´–ï –†–ê–°–®–ò–†–ï–ù–ù–´–ï –ú–ï–¢–û–î–´ –ú–ï–ù–Æ

  async showGenerationSettings(ctx: Context) {
    await safeEditMessage(ctx, 
      "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:",
      { reply_markup: freepikGenerationSettingsMenu }
    );
  }

  async showAspectRatioSettings(ctx: Context) {
    await safeEditMessage(ctx, 
      "üìê –í—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:",
      { reply_markup: freepikAspectRatioMenu }
    );
  }

  async showPersonGenerationSettings(ctx: Context) {
    await safeEditMessage(ctx, 
      "üë• –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–∏—Ç–∏–∫—É:",
      { reply_markup: freepikPersonGenerationMenu }
    );
  }

  async showSafetySettings(ctx: Context) {
    await safeEditMessage(ctx, 
      "üîê –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:",
      { reply_markup: freepikSafetySettingsMenu }
    );
  }

  async showVideoDurationSettings(ctx: Context) {
    await safeEditMessage(ctx, 
      "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:",
      { reply_markup: freepikVideoDurationMenu }
    );
  }

  async showVideoParamsSettings(ctx: Context) {
    await safeEditMessage(ctx, 
      "üé¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–¥–µ–æ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä:",
      { reply_markup: freepikVideoParamsMenu }
    );
  }

  async showTaskStatus(ctx: Context) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const activeTasks = await prisma.freepikTask.count({
        where: { 
          userId: userId, 
          status: { in: ["CREATED", "PROCESSING"] }
        }
      });

      const completedTasks = await prisma.freepikTask.count({
        where: { 
          userId: userId, 
          status: "COMPLETED"
        }
      });

      const failedTasks = await prisma.freepikTask.count({
        where: { 
          userId: userId, 
          status: "FAILED"
        }
      });

      await safeEditMessage(ctx, 
        `üìä –°—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –∑–∞–¥–∞—á Freepik\n\n` +
        `üîÑ –ê–∫—Ç–∏–≤–Ω—ã–µ: ${activeTasks}\n` +
        `‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ: ${completedTasks}\n` +
        `‚ùå –ù–µ—É–¥–∞—á–Ω—ã–µ: ${failedTasks}\n\n` +
        `–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
        { reply_markup: freepikTaskStatusMenu }
      );

    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á:", error);
      await safeEditMessage(ctx, 
        "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á",
        { reply_markup: freepikTaskStatusMenu }
      );
    }
  }

  // üéØ –ú–ï–¢–û–î–´ –í–´–ë–û–†–ê –ù–ê–°–¢–†–û–ï–ö

  async selectAspectRatio(ctx: Context, ratio: string) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    const ratioMap: { [key: string]: string } = {
      'square_1_1': 'square_1_1',
      'social_story_9_16': 'social_story_9_16', 
      'widescreen_16_9': 'widescreen_16_9',
      'traditional_3_4': 'traditional_3_4',
      'classic_4_3': 'classic_4_3'
    };

    this.setUserState(userId, { aspect_ratio: ratioMap[ratio] });
    await ctx.answerCallbackQuery(`‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${ratio.replace(/_/g, ':')}`);
  }

  async selectPersonGeneration(ctx: Context, setting: string) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    this.setUserState(userId, { person_generation: setting });
    await ctx.answerCallbackQuery(`‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${setting}`);
  }

  async selectSafetySetting(ctx: Context, setting: string) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    this.setUserState(userId, { safety_settings: setting });
    await ctx.answerCallbackQuery(`‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${setting}`);
  }

  async selectVideoDuration(ctx: Context, duration: string) {
    const userId = ctx.from?.id.toString();
    if (!userId) return;

    this.setUserState(userId, { video_duration: duration });
    await ctx.answerCallbackQuery(`‚úÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${duration} —Å–µ–∫`);
  }

  // üé¨ –ú–µ—Ç–æ–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –≤–∏–¥–µ–æ –º–æ–¥–µ–ª—è–º

  async showKlingNewMenu(ctx: Context) {
    await safeEditMessage(ctx, 
      "üöÄ Kling - –ù–æ–≤—ã–µ –º–æ–¥–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:",
      { reply_markup: freepikVideoKlingNewMenu }
    );
  }

  async showKlingClassicMenu(ctx: Context) {
    await safeEditMessage(ctx, 
      "‚≠ê Kling - –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:",
      { reply_markup: freepikVideoKlingClassicMenu }
    );
  }

  async showPixVerseMenu(ctx: Context) {
    await safeEditMessage(ctx, 
      "üéØ PixVerse –º–æ–¥–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:",
      { reply_markup: freepikVideoPixVerseMenu }
    );
  }

  async showMinimaxMenu(ctx: Context) {
    await safeEditMessage(ctx, 
      "üé™ Minimax Hailuo –º–æ–¥–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ:",
      { reply_markup: freepikVideoMinimaxMenu }
    );
  }

  async showSeedanceMenu(ctx: Context) {
    await safeEditMessage(ctx, 
      "üé≠ Seedance –º–æ–¥–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é –∏ –∫–∞—á–µ—Å—Ç–≤–æ:",
      { reply_markup: freepikVideoSeedanceMenu }
    );
  }

  async showWanMenu(ctx: Context) {
    await safeEditMessage(ctx, 
      "üåü Wan v2.2 –º–æ–¥–µ–ª–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ:",
      { reply_markup: freepikVideoWanMenu }
    );
  }

  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
  getBackButton() {
    return new (require("grammy")).InlineKeyboard()
      .text("üîô –ù–∞–∑–∞–¥ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º", "freepik_back_to_functions");
  }
}
