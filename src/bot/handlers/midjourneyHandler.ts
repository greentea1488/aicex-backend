import { Context } from 'grammy';
import { MidjourneyService, MidjourneyGenerationRequest } from '../services/ai/MidjourneyService';
import { SessionManager } from '../services/SessionManager';
import { prisma } from '../../utils/prismaClient';
import {
  midjourneyMainMenu,
  midjourneyGenerateMenu,
  midjourneySettingsMenu,
  midjourneyModelsMenu,
  midjourneyStylesMenu,
  midjourneyAspectRatiosMenu,
  midjourneyQualityMenu,
  midjourneyHistoryMenu,
  midjourneyHelpMenu,
  midjourneyQuickGenMenu,
  midjourneyConfigureMenu,
  midjourneyExamplesMenu,
  midjourneyPricingMenu,
  midjourneyPortraitExamplesMenu,
  midjourneyLandscapeExamplesMenu,
  midjourneyArchitectureExamplesMenu,
  midjourneyArtExamplesMenu,
  midjourneyScifiExamplesMenu,
  midjourneyFantasyExamplesMenu
} from '../keyboards/midjourneyKeyboard';

export class MidjourneyHandler {
  private midjourneyService: MidjourneyService;
  private sessionManager: SessionManager;

  constructor(sessionManager: SessionManager) {
    this.sessionManager = sessionManager;
    this.midjourneyService = new MidjourneyService();
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é Midjourney
   */
  async showMainMenu(ctx: Context) {
    await ctx.editMessageText(
      'üé® **Midjourney AI - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π**\n\n' +
      '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é —Å–∞–º–æ–π –º–æ—â–Ω–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫!\n\n' +
      '‚ú® **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n' +
      '‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é\n' +
      '‚Ä¢ 6 –≤–µ—Ä—Å–∏–π –º–æ–¥–µ–ª–∏ (5.0-7.0)\n' +
      '‚Ä¢ 4 —Å—Ç–∏–ª—è –∏ 5 —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å—Ç–æ—Ä–æ–Ω\n' +
      '‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n' +
      '‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π\n\n' +
      'üöÄ **–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:**',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyMainMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
   */
  async showGenerateMenu(ctx: Context) {
    await ctx.editMessageText(
      'üé® **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è**\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:\n\n' +
      'üöÄ **–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è** - –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã\n' +
      '‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã** - –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyGenerateMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
   */
  async showSettingsMenu(ctx: Context) {
    await ctx.editMessageText(
      '‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Midjourney**\n\n' +
      '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:\n\n' +
      'ü§ñ **–ú–æ–¥–µ–ª—å** - –≤–µ—Ä—Å–∏—è Midjourney\n' +
      'üé® **–°—Ç–∏–ª—å** - —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å\n' +
      'üìê **–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ** - —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n' +
      '‚≠ê **–ö–∞—á–µ—Å—Ç–≤–æ** - —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneySettingsMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
   */
  async showModelsMenu(ctx: Context) {
    const models = this.midjourneyService.getAvailableModels();
    
    let text = 'ü§ñ **–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ Midjourney**\n\n';
    models.forEach(model => {
      text += `**${model.name}** - ${model.cost}‚ÇΩ\n`;
    });
    
    text += '\nüí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n';
    text += '‚Ä¢ **7.0** - –Ω–æ–≤–µ–π—à–∞—è, –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n';
    text += '‚Ä¢ **6.1** - —Å—Ç–∞–±–∏–ª—å–Ω–∞—è, —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n';
    text += '‚Ä¢ **5.x** - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –≤–µ—Ä—Å–∏–∏';

    await ctx.editMessageText(text, {
      parse_mode: 'Markdown',
      reply_markup: midjourneyModelsMenu
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è
   */
  async showStylesMenu(ctx: Context) {
    const styles = this.midjourneyService.getAvailableStyles();
    
    let text = 'üé® **–í—ã–±–æ—Ä —Å—Ç–∏–ª—è**\n\n';
    styles.forEach(style => {
      text += `**${style.name}** - ${style.description}\n`;
    });

    await ctx.editMessageText(text, {
      parse_mode: 'Markdown',
      reply_markup: midjourneyStylesMenu
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–π —Å—Ç–æ—Ä–æ–Ω
   */
  async showAspectRatiosMenu(ctx: Context) {
    const ratios = this.midjourneyService.getAvailableAspectRatios();
    
    let text = 'üìê **–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω**\n\n';
    ratios.forEach(ratio => {
      text += `**${ratio.name}** - ${ratio.description}\n`;
    });

    await ctx.editMessageText(text, {
      parse_mode: 'Markdown',
      reply_markup: midjourneyAspectRatiosMenu
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∫–∞—á–µ—Å—Ç–≤–∞
   */
  async showQualityMenu(ctx: Context) {
    const qualities = this.midjourneyService.getAvailableQuality();
    
    let text = '‚≠ê **–£—Ä–æ–≤–µ–Ω—å –∫–∞—á–µ—Å—Ç–≤–∞**\n\n';
    qualities.forEach(quality => {
      text += `**${quality.name}** - ${quality.description}\n`;
    });

    await ctx.editMessageText(text, {
      parse_mode: 'Markdown',
      reply_markup: midjourneyQualityMenu
    });
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∏—Å—Ç–æ—Ä–∏–∏
   */
  async showHistoryMenu(ctx: Context) {
    await ctx.editMessageText(
      'üìä **–ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π**\n\n' +
      '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:\n\n' +
      'üìã **–ü–æ—Å–ª–µ–¥–Ω–∏–µ 10** - –Ω–µ–¥–∞–≤–Ω–∏–µ —Ä–∞–±–æ—Ç—ã\n' +
      'üìã **–ü–æ—Å–ª–µ–¥–Ω–∏–µ 25** - –±–æ–ª—å—à–µ –∏—Å—Ç–æ—Ä–∏–∏\n' +
      'üìã **–ü–æ—Å–ª–µ–¥–Ω–∏–µ 50** - –ø–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyHistoryMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–º–æ—â–∏
   */
  async showHelpMenu(ctx: Context) {
    await ctx.editMessageText(
      '‚ùì **–ü–æ–º–æ—â—å –ø–æ Midjourney**\n\n' +
      'üìñ **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å** - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n' +
      'üí° **–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤** - –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã\n' +
      'üí∞ **–¢–∞—Ä–∏—Ñ—ã** - —Å—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyHelpMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –±—ã—Å—Ç—Ä–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
   */
  async showQuickGenMenu(ctx: Context) {
    await ctx.editMessageText(
      'üöÄ **–ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è**\n\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞:\n\n' +
      'üë§ **–ü–æ—Ä—Ç—Ä–µ—Ç** - –ª—é–¥–∏ –∏ –ª–∏—Ü–∞\n' +
      'üèûÔ∏è **–ü–µ–π–∑–∞–∂** - –ø—Ä–∏—Ä–æ–¥–∞ –∏ –º–µ—Å—Ç–∞\n' +
      'üè¢ **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞** - –∑–¥–∞–Ω–∏—è –∏ —Å–æ–æ—Ä—É–∂–µ–Ω–∏—è\n' +
      'üé≠ **–ê—Ä—Ç** - —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã\n' +
      'üî¨ **Sci-Fi** - –Ω–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞\n' +
      'üêâ **–§—ç–Ω—Ç–µ–∑–∏** - –º–∞–≥–∏—á–µ—Å–∫–∏–µ –º–∏—Ä—ã',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyQuickGenMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   */
  async showConfigureMenu(ctx: Context) {
    await ctx.editMessageText(
      '‚öôÔ∏è **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏**\n\n' +
      '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n\n' +
      'ü§ñ **–ú–æ–¥–µ–ª—å** - –≤–µ—Ä—Å–∏—è Midjourney\n' +
      'üé® **–°—Ç–∏–ª—å** - —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å\n' +
      'üìê **–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ** - —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n' +
      '‚≠ê **–ö–∞—á–µ—Å—Ç–≤–æ** - —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏\n\n' +
      '‚úÖ **–ù–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é** - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyConfigureMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø—Ä–∏–º–µ—Ä–æ–≤
   */
  async showExamplesMenu(ctx: Context) {
    await ctx.editMessageText(
      'üí° **–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤**\n\n' +
      '–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è:\n\n' +
      'üë§ **–ü–æ—Ä—Ç—Ä–µ—Ç—ã** - –ª—é–¥–∏ –∏ –ª–∏—Ü–∞\n' +
      'üèûÔ∏è **–ü–µ–π–∑–∞–∂–∏** - –ø—Ä–∏—Ä–æ–¥–∞ –∏ –º–µ—Å—Ç–∞\n' +
      'üè¢ **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞** - –∑–¥–∞–Ω–∏—è –∏ —Å–æ–æ—Ä—É–∂–µ–Ω–∏—è\n' +
      'üé® **–ê—Ä—Ç** - —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã\n' +
      'üî¨ **Sci-Fi** - –Ω–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞\n' +
      'üêâ **–§—ç–Ω—Ç–µ–∑–∏** - –º–∞–≥–∏—á–µ—Å–∫–∏–µ –º–∏—Ä—ã',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyExamplesMenu
      }
    );
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ç–∞—Ä–∏—Ñ–æ–≤
   */
  async showPricingMenu(ctx: Context) {
    await ctx.editMessageText(
      'üí∞ **–¢–∞—Ä–∏—Ñ—ã Midjourney**\n\n' +
      'üíé **Midjourney 7.0** - 8‚ÇΩ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\n' +
      '‚Ä¢ –ù–æ–≤–µ–π—à–∞—è –≤–µ—Ä—Å–∏—è\n' +
      '‚Ä¢ –õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n' +
      '‚Ä¢ –í—Å–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n\n' +
      '‚ö° **Midjourney 6.x** - 7‚ÇΩ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\n' +
      '‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è\n' +
      '‚Ä¢ –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n' +
      '‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å\n\n' +
      'üî• **Midjourney 5.x** - 7‚ÇΩ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é\n' +
      '‚Ä¢ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –≤–µ—Ä—Å–∏–∏\n' +
      '‚Ä¢ –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n' +
      '‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞',
      {
        parse_mode: 'Markdown',
        reply_markup: midjourneyPricingMenu
      }
    );
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
   */
  async selectModel(ctx: Context, model: string) {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await prisma.user.upsert({
        where: { telegramId },
        update: {
          midjourneySettings: {
            model: model,
            style: 'photorealistic',
            aspect_ratio: '1:1',
            quality: 'high'
          }
        },
        create: {
          telegramId,
          username: 'unknown',
          midjourneySettings: {
            model: model,
            style: 'photorealistic',
            aspect_ratio: '1:1',
            quality: 'high'
          }
        }
      });

      await ctx.answerCallbackQuery(`‚úÖ –ú–æ–¥–µ–ª—å ${model} –≤—ã–±—Ä–∞–Ω–∞`);
      await this.showSettingsMenu(ctx);
    } catch (error) {
      console.error('Error selecting model:', error);
      await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–æ–¥–µ–ª–∏');
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å—Ç–∏–ª—è
   */
  async selectStyle(ctx: Context, style: string) {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    try {
      await prisma.user.update({
        where: { telegramId },
        data: {
          midjourneySettings: {
            style: style
          }
        }
      });

      await ctx.answerCallbackQuery(`‚úÖ –°—Ç–∏–ª—å ${style} –≤—ã–±—Ä–∞–Ω`);
      await this.showSettingsMenu(ctx);
    } catch (error) {
      console.error('Error selecting style:', error);
      await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∏–ª—è');
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω
   */
  async selectAspectRatio(ctx: Context, ratio: string) {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    try {
      await prisma.user.update({
        where: { telegramId },
        data: {
          midjourneySettings: {
            aspect_ratio: ratio
          }
        }
      });

      await ctx.answerCallbackQuery(`‚úÖ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ ${ratio} –≤—ã–±—Ä–∞–Ω–æ`);
      await this.showSettingsMenu(ctx);
    } catch (error) {
      console.error('Error selecting aspect ratio:', error);
      await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è');
    }
  }

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞
   */
  async selectQuality(ctx: Context, quality: string) {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    try {
      await prisma.user.update({
        where: { telegramId },
        data: {
          midjourneySettings: {
            quality: quality
          }
        }
      });

      await ctx.answerCallbackQuery(`‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ ${quality} –≤—ã–±—Ä–∞–Ω–æ`);
      await this.showSettingsMenu(ctx);
    } catch (error) {
      console.error('Error selecting quality:', error);
      await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—á–µ—Å—Ç–≤–∞');
    }
  }

  /**
   * –ù–∞—á–∏–Ω–∞–µ—Ç —Å–µ—Å—Å–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  async startGenerationSession(ctx: Context) {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    try {
      // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
      await this.sessionManager.createSession(telegramId.toString(), 'midjourney_generate');
      
      await ctx.editMessageText(
        'üé® **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Midjourney**\n\n' +
        'üìù **–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:**\n\n' +
        'üí° **–ü—Ä–∏–º–µ—Ä—ã:**\n' +
        '‚Ä¢ "–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º"\n' +
        '‚Ä¢ "–ü–æ—Ä—Ç—Ä–µ—Ç –º–æ–ª–æ–¥–æ–π –∂–µ–Ω—â–∏–Ω—ã –≤ —Å—Ç–∏–ª–µ —Ä–µ–Ω–µ—Å—Å–∞–Ω—Å"\n' +
        '‚Ä¢ "–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥ —Å –Ω–µ–æ–Ω–æ–≤—ã–º–∏ –æ–≥–Ω—è–º–∏"\n\n' +
        '‚úçÔ∏è **–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å:**',
        { parse_mode: 'Markdown' }
      );
    } catch (error) {
      console.error('Error starting generation session:', error);
      await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
    }
  }

  /**
   * –ù–∞—á–∏–Ω–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  async startGeneration(ctx: Context, prompt?: string) {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    try {
      // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = await prisma.user.findUnique({
        where: { telegramId }
      });

      if (!user?.midjourneySettings) {
        await ctx.answerCallbackQuery('‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
        return;
      }

      const settings = user.midjourneySettings as any;

      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
      if (!prompt) {
        await ctx.answerCallbackQuery('‚ùå –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        return;
      }

      const validation = this.midjourneyService.validatePrompt(prompt);
      if (!validation.valid) {
        await ctx.answerCallbackQuery(`‚ùå ${validation.error}`);
        return;
      }

      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
      const formattedPrompt = this.midjourneyService.formatPrompt(prompt, settings.style);

      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
      const request: MidjourneyGenerationRequest = {
        prompt: formattedPrompt,
        version: settings.model as any,
        aspect_ratio: settings.aspect_ratio as any,
        quality: settings.quality as any,
        style: settings.style as any
      };

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
      await ctx.editMessageText('üé® **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...**\n\n‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–ø—Ä–æ—Å...');

      const result = await this.midjourneyService.generateImage(request);

      if (result.success && result.image_url) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await prisma.midjourneyTask.create({
          data: {
            telegramId,
            userId: user.id,
            prompt: formattedPrompt,
            model: settings.model,
            style: settings.style,
            aspect_ratio: settings.aspect_ratio,
            quality: settings.quality,
            taskId: result.task_id || '',
            imageUrl: result.image_url,
            status: result.status,
            cost: result.cost || 0
          }
        });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await ctx.replyWithPhoto(result.image_url, {
          caption: `üé® **Midjourney ${settings.model}**\n\n` +
                   `üìù **–ü—Ä–æ–º–ø—Ç:** ${formattedPrompt}\n` +
                   `üé® **–°—Ç–∏–ª—å:** ${settings.style}\n` +
                   `üìê **–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ:** ${settings.aspect_ratio}\n` +
                   `‚≠ê **–ö–∞—á–µ—Å—Ç–≤–æ:** ${settings.quality}\n` +
                   `üí∞ **–°—Ç–æ–∏–º–æ—Å—Ç—å:** ${result.cost}‚ÇΩ`,
          parse_mode: 'Markdown'
        });

        await ctx.answerCallbackQuery('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!');
      } else {
        await ctx.editMessageText(
          `‚ùå **–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏**\n\n${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
          { parse_mode: 'Markdown' }
        );
      }

    } catch (error) {
      console.error('Error generating image:', error);
      await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
   */
  async showHistory(ctx: Context, limit: number = 10) {
    const telegramId = ctx.from?.id;
    if (!telegramId) return;

    try {
      const tasks = await prisma.midjourneyTask.findMany({
        where: { telegramId },
        orderBy: { createdAt: 'desc' },
        take: limit
      });

      if (tasks.length === 0) {
        await ctx.editMessageText(
          'üìä **–ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π**\n\n' +
          '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–π.\n' +
          '–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!',
          { parse_mode: 'Markdown' }
        );
        return;
      }

      let text = `üìä **–ò—Å—Ç–æ—Ä–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π (${tasks.length})**\n\n`;
      
      tasks.forEach((task, index) => {
        text += `${index + 1}. **${task.model}** - ${task.status}\n`;
        text += `   üìù ${task.prompt.substring(0, 50)}...\n`;
        text += `   üí∞ ${task.cost}‚ÇΩ - ${task.createdAt.toLocaleDateString()}\n\n`;
      });

      await ctx.editMessageText(text, { parse_mode: 'Markdown' });
    } catch (error) {
      console.error('Error showing history:', error);
      await ctx.answerCallbackQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏');
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤
   */
  async showPromptExamples(ctx: Context, category: string) {
    const examples: { [key: string]: string[] } = {
      'portraits': [
        '–ü–æ—Ä—Ç—Ä–µ—Ç –º–æ–ª–æ–¥–æ–π –∂–µ–Ω—â–∏–Ω—ã —Å –¥–ª–∏–Ω–Ω—ã–º–∏ –≤–æ–ª–æ—Å–∞–º–∏, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
        '–ú—É–∂—Å–∫–æ–π –ø–æ—Ä—Ç—Ä–µ—Ç –≤ –¥–µ–ª–æ–≤–æ–º –∫–æ—Å—Ç—é–º–µ, —Å—Ç—É–¥–∏–π–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ',
        '–î–µ—Ç—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç —Å —É–ª—ã–±–∫–æ–π, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ',
        '–ü–æ–∂–∏–ª–æ–π –º—É–∂—á–∏–Ω–∞ —Å –±–æ—Ä–æ–¥–æ–π, —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è'
      ],
      'landscapes': [
        '–ó–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º, –∑–æ–ª–æ—Ç—ã–µ –æ–±–ª–∞–∫–∞, —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
        '–ì–æ—Ä–Ω—ã–π –ø–µ–π–∑–∞–∂ —Å –∑–∞—Å–Ω–µ–∂–µ–Ω–Ω—ã–º–∏ –≤–µ—Ä—à–∏–Ω–∞–º–∏, —è—Å–Ω–æ–µ –Ω–µ–±–æ',
        '–õ–µ—Å–Ω–∞—è —Ç—Ä–æ–ø–∞ –≤ —Ç—É–º–∞–Ω–µ, –º–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞',
        '–ì–æ—Ä–æ–¥—Å–∫–æ–π –ø–µ–π–∑–∞–∂ –Ω–æ—á—å—é, –Ω–µ–æ–Ω–æ–≤—ã–µ –æ–≥–Ω–∏, –¥–æ–∂–¥—å'
      ],
      'architecture': [
        '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –Ω–µ–±–æ—Å–∫—Ä–µ–± –∏–∑ —Å—Ç–µ–∫–ª–∞ –∏ —Å—Ç–∞–ª–∏, —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω',
        '–ì–æ—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–±–æ—Ä —Å –≤–∏—Ç—Ä–∞–∂–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
        '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–æ–º –≤ —Å—Ç–∏–ª–µ —Ö–∞–π-—Ç–µ–∫, –±–µ–ª—ã–µ —Å—Ç–µ–Ω—ã',
        '–ó–∞–º–æ–∫ –Ω–∞ —Å–∫–∞–ª–µ, —Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ'
      ],
      'art': [
        '–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ —Å —è—Ä–∫–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏, —ç–∫—Å–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º',
        '–°–∫—É–ª—å–ø—Ç—É—Ä–∞ –∏–∑ –º—Ä–∞–º–æ—Ä–∞, –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ',
        '–¶–∏—Ñ—Ä–æ–≤–∞—è –∂–∏–≤–æ–ø–∏—Å—å –≤ —Å—Ç–∏–ª–µ —Ñ—ç–Ω—Ç–µ–∑–∏, –º–∞–≥–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
        '–ö–æ–ª–ª–∞–∂ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ'
      ],
      'scifi': [
        '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –≤ –¥–∞–ª–µ–∫–æ–π –≥–∞–ª–∞–∫—Ç–∏–∫–µ, –∑–≤–µ–∑–¥–Ω–æ–µ –Ω–µ–±–æ',
        '–†–æ–±–æ—Ç-–∞–Ω–¥—Ä–æ–∏–¥ –≤ —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–º –≥–æ—Ä–æ–¥–µ, –Ω–µ–æ–Ω–æ–≤—ã–µ –æ–≥–Ω–∏',
        '–ö–∏–±–µ—Ä–ø–∞–Ω–∫-–ø–µ—Ä—Å–æ–Ω–∞–∂ —Å –∏–º–ø–ª–∞–Ω—Ç–∞–º–∏, —Ç–µ–º–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞',
        '–ò–Ω–æ–ø–ª–∞–Ω–µ—Ç–Ω—ã–π –ø–µ–π–∑–∞–∂ —Å –¥–≤—É–º—è —Å–æ–ª–Ω—Ü–∞–º–∏, —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∞—è —Ñ–ª–æ—Ä–∞'
      ],
      'fantasy': [
        '–î—Ä–∞–∫–æ–Ω –≤ –ø–µ—â–µ—Ä–µ —Å —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏, –º–∞–≥–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ',
        '–í–æ–ª—à–µ–±–Ω–∏–∫ –≤ –±–∞—à–Ω–µ —Å –∫–Ω–∏–≥–∞–º–∏, —Å–≤–µ—á–∏ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã',
        '–≠–ª—å—Ñ–∏–π—Å–∫–∏–π –ª–µ—Å —Å —Å–≤–µ—Ç—è—â–∏–º–∏—Å—è –≥—Ä–∏–±–∞–º–∏, –º–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞',
        '–†—ã—Ü–∞—Ä—å –≤ –¥–æ—Å–ø–µ—Ö–∞—Ö –Ω–∞ –ø–æ–ª–µ –±–∏—Ç–≤—ã, —ç–ø–∏—á–µ—Å–∫–∞—è —Å—Ü–µ–Ω–∞'
      ]
    };

    const categoryExamples = examples[category] || [];
    
    if (categoryExamples.length === 0) {
      await ctx.answerCallbackQuery('‚ùå –ü—Ä–∏–º–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    let text = `üí° **–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤ - ${category}**\n\n`;
    categoryExamples.forEach((example, index) => {
      text += `${index + 1}. ${example}\n\n`;
    });

    text += 'üí° **–°–æ–≤–µ—Ç—ã:**\n';
    text += '‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è\n';
    text += '‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —É–∫–∞–∑–∞–Ω–∏—è\n';
    text += '‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n';
    text += '‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏';

    await ctx.editMessageText(text, { parse_mode: 'Markdown' });
  }
}
