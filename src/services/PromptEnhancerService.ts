import { OpenAIService } from './ai/OpenAIService';
import { logger } from '../utils/logger';

export interface PromptEnhancementOptions {
  style?: 'photographic' | 'artistic' | 'realistic' | 'fantasy' | 'anime';
  quality?: 'high' | 'medium' | 'low';
  language?: 'ru' | 'en';
  addDetails?: boolean;
  improveComposition?: boolean;
  model?: string; // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–µ–ª—å –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
}

export interface EnhancedPrompt {
  original: string;
  enhanced: string;
  improvements: string[];
  style: string;
  quality: string;
}

export class PromptEnhancerService {
  private openai: OpenAIService;

  constructor() {
    this.openai = new OpenAIService();
  }

  /**
   * –£–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   */
  async enhancePrompt(
    originalPrompt: string, 
    options: PromptEnhancementOptions = {}
  ): Promise<EnhancedPrompt> {
    try {
      const {
        style = 'photographic',
        quality = 'high',
        language = 'ru',
        addDetails = true,
        improveComposition = true
      } = options;

      console.log('==================== PROMPT ENHANCER START ====================');
      console.log('Original Prompt:', originalPrompt);
      console.log('Options:', JSON.stringify(options, null, 2));
      console.log('===============================================================');

      // –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
      const systemPrompt = this.createSystemPrompt(style, quality, language, addDetails, improveComposition, options.model);
      
      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç
      const userPrompt = `–£–ª—É—á—à–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: "${originalPrompt}"`;

      logger.info('üî• Prompt Enhancer - Starting enhancement:', {
        originalPrompt: originalPrompt.substring(0, 100),
        style,
        quality,
        language
      });

      // –í—ã–∑—ã–≤–∞–µ–º GPT –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞
      console.log('==================== CALLING GPT FOR ENHANCEMENT ====================');
      console.log('System prompt length:', systemPrompt.length);
      console.log('User prompt:', userPrompt);
      console.log('===============================================================');
      
      const response = await this.openai.chat([
        { role: 'system', content: systemPrompt },
        { role: 'user', content: userPrompt }
      ], 'gpt-4o');
      
      console.log('==================== GPT RESPONSE ====================');
      console.log('Response success:', response.success);
      console.log('Response content:', response.content);
      console.log('Response error:', response.error);
      console.log('===============================================================');

      if (!response.success || !response.content) {
        throw new Error('Failed to enhance prompt');
      }

      // –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç GPT
      const enhancedPrompt = this.parseEnhancedPrompt(response.content, originalPrompt);
      
      console.log('==================== PROMPT ENHANCER RESULT ====================');
      console.log('Original:', enhancedPrompt.original);
      console.log('Enhanced:', enhancedPrompt.enhanced);
      console.log('Improvements:', enhancedPrompt.improvements);
      console.log('===============================================================');

      logger.info('üî• Prompt Enhancer - Success:', {
        originalLength: originalPrompt.length,
        enhancedLength: enhancedPrompt.enhanced.length,
        improvementsCount: enhancedPrompt.improvements.length
      });

      return enhancedPrompt;

    } catch (error: any) {
      logger.error('üî• Prompt Enhancer ERROR:', error);
      console.log('==================== PROMPT ENHANCER ERROR ====================');
      console.log('Error:', error);
      console.log('Error message:', error.message);
      console.log('Error stack:', error.stack);
      console.log('Using fallback prompt');
      console.log('===============================================================');
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –±–∞–∑–æ–≤—ã–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏
      return this.createFallbackPrompt(originalPrompt, options);
    }
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è GPT
   */
  private createSystemPrompt(
    style: string, 
    quality: string, 
    language: string, 
    addDetails: boolean, 
    improveComposition: boolean,
    model?: string
  ): string {
    const languageInstructions = language === 'ru' 
      ? '–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –Ω–æ —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º (—Ç–∞–∫ –ª—É—á—à–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å AI –º–æ–¥–µ–ª—è–º–∏).'
      : 'Respond in English and keep the enhanced prompt in English.';

    const styleInstructions = this.getStyleInstructions(style);
    const qualityInstructions = this.getQualityInstructions(quality);
    const modelInstructions = this.getModelInstructions(model);

    return `üìå –¶–µ–ª—å

–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π Prompt Enhancer, —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —É–ª—É—á—à–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–æ–º–ø—Ç—ã, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.

üß≠ –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã
1. –ü–æ–ª—É—á–∏–≤ –≤—Ö–æ–¥–Ω–æ–π –ø—Ä–æ–º–ø—Ç, —Ç—ã:
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—à—å —Å—É—Ç—å –∏ —Ü–µ–ª—å –ø—Ä–æ–º–ø—Ç–∞.
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—è–µ—à—å –µ–≥–æ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: –Ω–µ—è—Å–Ω–æ—Å—Ç—å, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –ª–∏—à–Ω–∏–µ —Å–ª–æ–≤–∞, –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—å –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
‚Ä¢ –£–ª—É—á—à–∞–µ—à—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –¥–æ–±–∞–≤–ª—è–µ—à—å —á–µ—Ç–∫–∏–µ –¥–µ—Ç–∞–ª–∏ (—Å—Ç–∏–ª—å, —Å–≤–µ—Ç, –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, –∫–æ–º–ø–æ–∑–∏—Ü–∏—é, POV –∏ —Ç.–¥.).
‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥–∏—à—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫.
‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä—É–µ—à—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

2. –í—Å–µ–≥–¥–∞ —Å–ª–µ–¥—É–π best-practice –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:
‚Ä¢ –£–ø–æ—Ä –Ω–∞ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏, —Å—Ç–∏–ª—å, —Å–≤–µ—Ç, POV, –∫–∞–º–µ—Ä—É, —É—Ä–æ–≤–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏, –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ.
‚Ä¢ –£–±–∏—Ä–∞–π –ª–∏—à–Ω–∏–µ –≤–≤–æ–¥–Ω—ã–µ —Ñ—Ä–∞–∑—ã, –¥–µ—Ä–∂–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–ø–∏—Å–∞–Ω–∏—è –ª–∞–∫–æ–Ω–∏—á–Ω–æ–π –∏ –æ–±—Ä–∞–∑–Ω–æ–π.
‚Ä¢ –î–æ–±–∞–≤–ª—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–≤–∏–∂–µ–Ω–∏–∏ –∫–∞–º–µ—Ä—ã, –ø–ª–∞–Ω–µ (close up / medium / wide), –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ.
‚Ä¢ –†–∞–∑–±–∏–≤–∞–π —Å—Ü–µ–Ω—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—ã–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è.

3. –í—ã—Ö–æ–¥ —Å—Ç—Ä–æ–≥–æ –≤ –æ–¥–Ω–æ–º –±–ª–æ–∫–µ:

‚ú® Improved prompt (EN):
[—Ñ–∏–Ω–∞–ª—å–Ω—ã–π —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º]

üìù –ü—Ä–∞–≤–∏–ª–∞
‚Ä¢ –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–π –æ—Ç —Å–µ–±—è –∫—Ä–µ–∞—Ç–∏–≤, –Ω–µ –∏–∑–º–µ–Ω—è—è —Å–º—ã—Å–ª –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞.
‚Ä¢ –£–ª—É—á—à–∞–π —è—Å–Ω–æ—Å—Ç—å, –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫—É, —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—é –ø–æ–¥ –º–æ–¥–µ–ª—å.
‚Ä¢ –ï—Å–ª–∏ –ø—Ä–æ–º–ø—Ç —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ö–æ—Ä–æ—à ‚Äî —Å–ª–µ–≥–∫–∞ –µ–≥–æ —à–ª–∏—Ñ—É–π, –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞–π.
‚Ä¢ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª–∏–Ω–Ω—ã–µ –≤–≤–æ–¥–Ω—ã–µ —Ñ—Ä–∞–∑—ã –∏ —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –∑–≤—É—á–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥–ª—è –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ prompt-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥–∞.
‚Ä¢ –ö–†–ò–¢–ò–ß–ù–û: –°–æ—Ö—Ä–∞–Ω—è–π —Ç–æ—á–Ω—ã–π —Å–º—ã—Å–ª –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞!

–°–¢–ò–õ–¨: ${styleInstructions}
–ö–ê–ß–ï–°–¢–í–û: ${qualityInstructions}
${modelInstructions}

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–π):
‚ú® Improved prompt (EN):
[—É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º]

–ü—Ä–∏–º–µ—Ä:
‚ú® Improved prompt (EN):
A majestic horse galloping through a misty field at dusk, cinematic wide shot, golden hour lighting, dramatic clouds, photorealistic, high detail, professional wildlife photography`;
  }

  /**
   * –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å—Ç–∏–ª—é
   */
  private getStyleInstructions(style: string): string {
    const styles = {
      photographic: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å - —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
      artistic: '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å - –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      realistic: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Å—Ç–∏–ª—å - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      fantasy: '–§–∞–Ω—Ç–∞–∑–∏–π–Ω—ã–π —Å—Ç–∏–ª—å - –≤–æ–ª—à–µ–±–Ω—ã–µ –∏ –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
      anime: '–ê–Ω–∏–º–µ —Å—Ç–∏–ª—å - —è–ø–æ–Ω—Å–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è, —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞'
    };
    return styles[style as keyof typeof styles] || styles.photographic;
  }

  /**
   * –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É
   */
  private getQualityInstructions(quality: string): string {
    const qualities = {
      high: '–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ - –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      medium: '–°—Ä–µ–¥–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ - —Ö–æ—Ä–æ—à–∏–µ, –Ω–æ –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª—è–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      low: '–ü—Ä–æ—Å—Ç–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ - –±–∞–∑–æ–≤—ã–µ, –ø–æ–Ω—è—Ç–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    };
    return qualities[quality as keyof typeof qualities] || qualities.high;
  }

  /**
   * –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –º–æ–¥–µ–ª–∏
   */
  private getModelInstructions(model?: string): string {
    if (!model) return '';

    const modelInstructions = {
      // Freepik –º–æ–¥–µ–ª–∏
      'seedream': 'SEEDREAM: –§–æ–∫—É—Å –Ω–∞ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ, —á–µ—Ç–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è.',
      'flux': 'FLUX: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å, —Ö–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏. –î–æ–±–∞–≤–ª—è–π —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏.',
      'mystic': 'MYSTIC: –£–ª—å—Ç—Ä–∞-—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è. –ê–∫—Ü–µ–Ω—Ç –Ω–∞ —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏–∑–º–µ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.',
      'imagen3': 'IMAGEN3: Google –º–æ–¥–µ–ª—å, —Ö–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏. –î–æ–±–∞–≤–ª—è–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.',
      
      // Midjourney –º–æ–¥–µ–ª–∏
      'midjourney': 'MIDJOURNEY: –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å, –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã, —Å—Ç–∏–ª–∏ (--style, --ar).',
      'midjourney_7.0': 'MIDJOURNEY v7.0: –ù–æ–≤–µ–π—à–∞—è –≤–µ—Ä—Å–∏—è, –æ—Ç–ª–∏—á–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è. –î–æ–±–∞–≤–ª—è–π --v 7.0, —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.',
      'midjourney_6.1': 'MIDJOURNEY v6.1: –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ, —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å. –ò—Å–ø–æ–ª—å–∑—É–π --v 6.1.',
      
      // Kling –≤–∏–¥–µ–æ –º–æ–¥–µ–ª–∏
      'kling_v2_5_pro': 'KLING v2.5 Pro: –ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –≤–∏–¥–µ–æ, –ø–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã. –û–ø–∏—Å—ã–≤–∞–π –¥–≤–∏–∂–µ–Ω–∏–µ, —Ä–∞–∫—É—Ä—Å—ã, –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.',
      'kling_v2_1_pro': 'KLING v2.1 Pro: –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ, –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è. –ê–∫—Ü–µ–Ω—Ç –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–∏ –∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏.',
      'minimax_hailuo_768p': 'MiniMax Hailuo 768p: –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –û–ø–∏—Å—ã–≤–∞–π –¥–≤–∏–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞, –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Å—Ü–µ–Ω—ã.',
      'minimax_hailuo_1080p': 'MiniMax Hailuo 1080p: –í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ. –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤.',
      'pixverse_v5': 'PixVerse V5: –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ. –•–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è.',
      
      // Runway –º–æ–¥–µ–ª–∏
      'runway': 'RUNWAY: –ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –≤–∏–¥–µ–æ, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞. –û–ø–∏—Å—ã–≤–∞–π –∫–∞–º–µ—Ä—É, –¥–≤–∏–∂–µ–Ω–∏–µ, –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.',
      
      // DALL-E
      'dalle': 'DALL-E: OpenAI –º–æ–¥–µ–ª—å, —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ß–µ—Ç–∫–∏–µ, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è, –∏–∑–±–µ–≥–∞–π –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π.',
      
      // –û–±—â–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
      'default': '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è - –¥–æ–±–∞–≤–ª—è–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏, –æ—Å–≤–µ—â–µ–Ω–∏–µ, –∫–æ–º–ø–æ–∑–∏—Ü–∏—é, —Å—Ç–∏–ª—å.'
    };

    // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ
    for (const [key, instruction] of Object.entries(modelInstructions)) {
      if (model.toLowerCase().includes(key.toLowerCase()) || key === 'default') {
        return `–ú–û–î–ï–õ–¨: ${instruction}`;
      }
    }

    return `–ú–û–î–ï–õ–¨: ${model} - –∞–¥–∞–ø—Ç–∏—Ä—É–π –ø—Ä–æ–º–ø—Ç –ø–æ–¥ —Å–ø–µ—Ü–∏—Ñ–∏–∫—É —ç—Ç–æ–π –º–æ–¥–µ–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.`;
  }

  /**
   * –ü–∞—Ä—Å–∏—Ç –æ—Ç–≤–µ—Ç GPT
   */
  private parseEnhancedPrompt(gptResponse: string, originalPrompt: string): EnhancedPrompt {
    try {
      // –ò—â–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
      const improvedMatch = gptResponse.match(/‚ú® Improved prompt \(EN\):\s*([^\n]+)/);
      if (improvedMatch && improvedMatch[1]) {
        return {
          original: originalPrompt,
          enhanced: improvedMatch[1].trim(),
          improvements: ['–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', '–î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏', '–£–ª—É—á—à–µ–Ω–∞ –∫–æ–º–ø–æ–∑–∏—Ü–∏—è'],
          style: 'photographic',
          quality: 'high'
        };
      }

      // Fallback - –∏—â–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ —Å—Ç–∞—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
      const enhancedMatch = gptResponse.match(/ENHANCED_PROMPT:\s*(.+?)(?=\nIMPROVEMENTS:|$)/s);
      const enhanced = enhancedMatch ? enhancedMatch[1].trim() : originalPrompt;

      // –ò—â–µ–º —É–ª—É—á—à–µ–Ω–∏—è
      const improvementsMatch = gptResponse.match(/IMPROVEMENTS:\s*([\s\S]*?)(?=\n\n|$)/);
      const improvements = improvementsMatch 
        ? improvementsMatch[1]
            .split('\n')
            .map(line => line.replace(/^[-*]\s*/, '').trim())
            .filter(line => line.length > 0)
        : ['–î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏', '–£–ª—É—á—à–µ–Ω–∞ –∫–æ–º–ø–æ–∑–∏—Ü–∏—è'];

      return {
        original: originalPrompt,
        enhanced,
        improvements,
        style: 'photographic',
        quality: 'high'
      };
    } catch (error) {
      logger.error('Failed to parse enhanced prompt:', error);
      return this.createFallbackPrompt(originalPrompt);
    }
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç fallback –ø—Ä–æ–º–ø—Ç –µ—Å–ª–∏ GPT –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
   */
  private createFallbackPrompt(originalPrompt: string, options: PromptEnhancementOptions = {}): EnhancedPrompt {
    const { style = 'photographic', quality = 'high' } = options;
    
    // –ë–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è
    let enhanced = originalPrompt;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
    if (quality === 'high') {
      enhanced += ', high quality, detailed, professional';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
    switch (style) {
      case 'photographic':
        enhanced += ', professional photography, realistic lighting';
        break;
      case 'artistic':
        enhanced += ', artistic style, creative composition';
        break;
      case 'realistic':
        enhanced += ', photorealistic, detailed textures';
        break;
      case 'fantasy':
        enhanced += ', fantasy art, magical atmosphere';
        break;
      case 'anime':
        enhanced += ', anime style, vibrant colors';
        break;
    }

    return {
      original: originalPrompt,
      enhanced,
      improvements: ['–î–æ–±–∞–≤–ª–µ–Ω—ã –±–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞', '–î–æ–±–∞–≤–ª–µ–Ω—ã —Å—Ç–∏–ª–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã'],
      style,
      quality
    };
  }

  /**
   * –ë—ã—Å—Ç—Ä–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ (–±–µ–∑ GPT)
   */
  async quickEnhance(prompt: string): Promise<string> {
    // –ë–∞–∑–æ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –±–µ–∑ –≤—ã–∑–æ–≤–∞ GPT
    let enhanced = prompt;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!enhanced.toLowerCase().includes('high quality') && !enhanced.toLowerCase().includes('detailed')) {
      enhanced += ', high quality, detailed';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–µ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!enhanced.toLowerCase().includes('lighting') && !enhanced.toLowerCase().includes('light')) {
      enhanced += ', professional lighting';
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–∑–∏—Ü–∏—é –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if (!enhanced.toLowerCase().includes('composition') && !enhanced.toLowerCase().includes('angle')) {
      enhanced += ', good composition';
    }

    return enhanced;
  }
}
